package br.com.ibm.codigos;

import java.io.IOException;

public class MaiorPalindromo {

	public static void main (String[] args) throws IOException {
		 int maiorPalindro = Integer.MIN_VALUE;
		 String numberString = "76720528972880123988399143849752534377899200614460633079658330173656229961101150241765891259788453341221120155429214871922438814247967511347496283679789692824178399683192206830034536491606349991057616603360558823217415196140847135131649689385590368181159803511903448556499644940231417901654927496671282992059030930803981028185509700994864987452183866137460190605507401325005207806085253791668923660058401358861655292118787693561829328341676174531049333075721192304011646094874598728901605535564598203232490763024660018413484230339134342587322556226749991777448006550498742180877887694657766272494066806612007252801893989345883142785683249919593469396177138639955476513494326342521416568618485647860510138583144320026374278361252158901820662102824400416046746182619983342300994513879020179881343615557663065625087198353907048086738955878203548449760134196738349835809253343655628496035491117656774123652417519469161029004912633200620018570192274324747448484918565958069729235232565921454221376647013907392066755239637560976972645892562582213402166593900580429591403534747610143043933436089948534769871456535967944867225305868470592306901668126973728570271313537311429085414172986879572938840933351389391788144258759959221263573718877146441334894407072069315436153466927380893584166287160697456432593361815193234943152128527189901134064897412957347766164914710356648328812144539094319131743295911101464245096711003091876659690520712867421034143328266300646244701661638010645984445";
		//String numberString = "4334932391000000001";
		 int numeroarray = 0;
		 String palindromoMaiorString = new String();
		 int n = numberString.length(); //tamanho do inteiro
		 //Map<Character,Integer> countNumbers = new HashMap<Character,Integer>();
		 while(n>0) {

			 char numberOfString = numberString.charAt(numeroarray);			 
			 int y = numeroarray;
			 int count = 0;

			 while(count==0) {
				 if(y == numberString.length()-1) {
					 break;
				 }
				 if(numberOfString == numberString.charAt(y+1)) {
					 count++;
					 if(y==numberString.length()-1) {
						 break;
					 }
				 }else {
					 if(y==numberString.length()-1) {
						 break;
					 }
					 y++;
				 }
			 }
			 String palindromoPedaco;
			 if(y==numberString.length()-1 || y==numberString.length()-2 || y==numberString.length()-3) {
				 palindromoPedaco = numberString.substring(numeroarray, numberString.length());

			 }else{
				 palindromoPedaco = numberString.substring(numeroarray, y+2);
				 }
			 

			 if(isPalindromo(palindromoPedaco) == true && palindromoPedaco.length()>maiorPalindro) {
				 maiorPalindro = palindromoPedaco.length();
				 palindromoMaiorString = palindromoPedaco;
			 }
			 
			n--;
			numeroarray++;
			
		} System.out.println(palindromoMaiorString);
	} 
		
		 
	private static boolean isPalindromo(String pedaco) {
		return pedaco.equals(new StringBuilder(pedaco).reverse().toString());
	}
	
	
}

	
